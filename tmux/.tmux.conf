# Tibor's tmux configuration.

# set shell
set-option -g default-shell /bin/zsh
set-option -g default-command "${SHELL}"

# detect tmux version
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# prefix: C-SPC
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# vi mode
set-window-option -g mode-keys vi

# vi-friendly copy/paste (using xclip since LXPLUS does not have xsel)
if-shell -b '[[ "$TMUX_VERSION" < "2.4" ]]' " \
  bind-key -t vi-edit Up history-up; \
  bind-key -t vi-edit Down history-down; \
  unbind-key -t vi-copy Space     ;   bind-key -t vi-copy v begin-selection; \
  unbind-key -t vi-copy Enter     ;   bind-key -t vi-copy y copy-pipe 'xclip -i -sel clip > /dev/null'; \
  unbind-key -t vi-copy C-v       ;   bind-key -t vi-copy C-v rectangle-toggle; \
  unbind-key -t vi-copy [         ;   bind-key -t vi-copy [ begin-selection; \
  unbind-key -t vi-copy ]         ;   bind-key -t vi-copy ] copy-selection"
if-shell -b '[[ "$TMUX_VERSION" > "2.4" ]]' " \
  bind-key -T edit-mode-vi Up send-keys -X history-up; \
  bind-key -T edit-mode-vi Down send-keys -X history-down; \
  unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection; \
  unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -i -sel clip > /dev/null'; \
  unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
  unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection; \
  unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection"

# vi-friendly pane switching
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# vi-friendly pane resizing
bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "resize-pane -L 10"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "resize-pane -R 10"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "resize-pane -U 5"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "resize-pane -D 5"

# allow Prefix + C-hjkl to pass through to terminal apps such as emacs
bind C-h send-keys 'C-h'
bind C-j send-keys 'C-j'
bind C-k send-keys 'C-k'
bind C-l send-keys 'C-l'
bind M-h send-keys 'M-h'
bind M-j send-keys 'M-j'
bind M-k send-keys 'M-k'
bind M-l send-keys 'M-l'

# disable ESC key delay
set -sg escape-time 0

# focus events
if-shell -b '[[ "$TMUX_VERSION" > "2.4" ]]' " \
    set -g focus-events on"

# set window title to current working directory
if-shell -b '[[ "$TMUX_VERSION" > "2.4" ]]' " \
  set-option -g automatic-rename on; \
  set-option -g automatic-rename-format '#{b:pane_current_path}'"

# enable mouse
if-shell -b '[[ "$TMUX_VERSION" < "2.1" ]]' \
  "set -g mode-mouse on; set -g mouse-select-pane on; set -g mouse-resize-pane on; set -g mouse-select-window on"
if-shell -b '[[ "$TMUX_VERSION" > "2.1" ]]' \
  "set -g mouse on"

# set clipboard
set-window-option -g set-clipboard on

# increase scrollback buffer size
set -g history-limit 500000

# start numbering windows and panes at 1
set-option -g base-index 1
set-window-option -g pane-base-index 1
set -g renumber-windows on

# windows: movement
bind C-p previous-window
bind -n C-Left previous-window
bind C-n next-window
bind -n C-Right next-window
bind C-Space last-window

# windows: swapping
bind -n C-S-Left { swap-window -t -1; previous-window }
bind -n C-S-Right { swap-window -t +1; next-window }

# panes: movement
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R

# panes: splitting
bind -r | split-window -h
bind -r - split-window -v

# enable WM window titles for easier switching
set-option -g set-titles on

# enable colourful terminal
set -s default-terminal 'screen-256color'
set -as terminal-overrides ',*-256color:Tc'
set -as terminal-overrides ',xterm-termite:Tc'
set-option -g bell-action any
set-option -g visual-bell on

# copy mode and error messages in gruvbox dark theme
set-window-option -g mode-style 'fg=#282828,bg=#fe8019'
set-option -g message-style 'fg=#282828,bg=#fe8019'

# pane indicators in gruvbox dark theme
set-option -g display-panes-active-colour '#ebdbb2'
set-option -g display-panes-colour '#928374'

# status bar visually going with dwm top bar and using gruvbox dark theme
set-option -g status-position bottom
set-option -g status-justify centre
set-option -g status-bg '#282828'
set-option -g status-fg '#928374'
set-option -g status-left ""
set-option -g window-status-current-format "#[fg=#ebdbb2]#I:#W#F"
set-option -g window-status-format "#I:#W#F"
set-option -g window-status-separator "  "
set-option -g status-right "#S "

# tmux plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'jbnicolai/tmux-fpp'
set -g @fpp-key 'P'
set -g @plugin 'Morantron/tmux-fingers'

# initialise tmux plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
